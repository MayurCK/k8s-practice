---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
  namespace: alerting
spec:
  replicas: 1
  alerting:
    alertmanagers:
    - namespace: alerting 
      name: alertmanager-svc
      port: web
  serviceMonitorSelector:
    matchLabels:
      team: frontend
  serviceMonitorNamespaceSelector:
    matchNames:
    - alerting
  ruleSelector:
    matchLabels:
      role: alert-rules
      prometheus: prometheus
---
#----------------------------svc for exposing prometheus instance-----------------#
apiVersion: v1
kind: Service
metadata:
  name: prometheus-svc
  namespace: alerting
spec:
  type: NodePort
  ports:
  - nodePort: 30900
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    prometheus: prometheus
---
#-----------------------------haproxy ingress for prometheus-svc-----------------#
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/auth-tls-cert-header: "false"
    ingress.kubernetes.io/rewrite-target: /   # It will rewrite the requested url with defined path strip down the match words and remaining is sent to the server. 
    ingress.kubernetes.io/ssl-passthrough: "true"
    ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: haproxy
  name: prometheus-instance-ingress
  namespace: alerting
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: prometheus-svc
          servicePort: 9090
        path: /graph/graph  #These because the prometheus redirect to /graph by defalut.
      - backend:
          serviceName: prometheus-svc
          servicePort: 9090
        path: /     
status:
  loadBalancer: {}
